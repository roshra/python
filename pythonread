Python 

# Single line comments 
Start with #

# Multiline comments 
These would consume memory , the memory is allocated 
but garbage collection later removes it								
Tripple double quotes """
Tripple single quotes '''

# Built in data types
	None Type
	Numeric Type
	Sequences 
	sets 
	Mappings 

#None Type : 
	Data type does not conatin any value, in java its null object
	it can be used as default value of an argument
	if calling a function no value is passed, the default value will be null
	in boolean expression the null represetns as false

#Numeric Types:
	int , float , complex

	int is with out fractions , without decimals 
	it will contain the negative and positive numbers
	no limit in python to store the numbers
	a = -57

#float is with decimals
	num = 55.67998
	we can also use the exponentiation 
	2.5 * 10 power 4 can be written as 2.5E4
	x = 2.5E4 
	here x will be automatically taken as float data type

#complex numbers
	python program to add two complex numbers
	c1 = 2.5 + 2.5J
	c2 = 3.0 - 0.5J
	sum = c1 + c2
	print("sum = ", sum)

# Data type conversion
# Python program converts octal, binary and hex to decimal number system

s1 = "17"
s2 = "11100101"
s3 = "1c2"

n1 = int(s1,8)
n2 = int(s2,2)
n3 = int(s1,16)
print ("octal 17 converted to decimal value is : ",n1)
print ("binary 2 converted to decimal value is : ",n2)
print ("Hex 16 converted to decimal value is : ",n3)

Or

a = 10
b = bin(a)
print("value of binary b is ", b)

b = oct(a)
print("value of oct b is ", b)

b = hex(a)
print("value of hex b is ", b)

# Bool data type
a = 10
b = 20
if(a < b): print("value of a is greater than b : if condition is a bool true")

# String data type 
str1 = "Welcome1"
str2 = "weclome2"
str3 = """this is tripple quotes str3"""
str4 = '''this is tripple quotes str4'''
print("printing str1 ", str1)
print("printing str2 ", str2)
# Print single index
print(str1[0])
# Print index from 0 to 5
print(str1[0:6])
# Print index from end
print ("printing str1 from end ", str1[-4])
# Print * 2
print("printing str1 two times " , str1*2)
# Print str3
print("printing str3 ", str4)

# Byte Data type

A Byte number ranges from positive integers from 0 - 255
# includes numbers from 0-255 (included) - do not store negative numbers
# This is list of byte numbers
elements = [20,10,0,40]
# convert list into byte array
x = bytes(elements)
print("list now convered to byte array ", x[0])
for i in x: print(i)

# Bytearray Data Type
# The bytearray datatype is similar to bytes datatype
# The bytes type array cannot be modified but the bytearray type can be modified
# list of bytearray
elements = [10,20,0,40]
# list is now convered to bytearray
x = bytearray(elements)
print(elements[0])
x[0] = 80
print ("value of first element is modified as ", x[0])
for i in x: print(i)

# list Data Type
List of represents a group of elements
Main difference between the list and array is 
a list can store dofferent types of data 
example 
list = [10,20,15.5, 'rosh', "mary"]
slicing operation [0:3] represents elements from 0th to 2nd element
10,20,15.5

list = [10,20,15.5,"rosh", 'mary']
print("printing all the elements in list ",list)
print("printing 0th element in list ", list[0])
print("printing 0th to 2nd elements in list ", list[0:3])
print("printing last element of the list", list[-1])
print("duplicating the list ", list * 2)
list can be modified 

# Tuple data type

Tuple are like list and can have different data types
Tuples are read only list and can't be modified 
    tuple[0] = 80
TypeError: 'tuple' object does not support item assignment

# tuple is a mix of different data types enclosed in parentheses seperated by comans
tuple = (10,-20,15.5, 'rosh', 'mary')
print("first tuple element ", tuple[0])

# tuple can't be modified and will give an error
tuple[0] = 80

Tuples are enclosed in parantheses 
tuple(10,-20,15.5,'rosh',"mary")


